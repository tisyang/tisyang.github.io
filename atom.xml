<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>碎片</title>
  <subtitle>tisyang&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tisyang.github.io/"/>
  <updated>2016-04-28T16:25:05.659Z</updated>
  <id>https://tisyang.github.io/</id>
  
  <author>
    <name>tisyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>添加可执行程序到 Path 中</title>
    <link href="https://tisyang.github.io/2016/04/add-exe-to-path/"/>
    <id>https://tisyang.github.io/2016/04/add-exe-to-path/</id>
    <published>2016-04-27T16:00:00.000Z</published>
    <updated>2016-04-28T16:25:05.659Z</updated>
    
    <content type="html">&lt;p&gt;将一个程序加入到环境 Path 中，通常做法是将程序文件所在目录附加到系统或者用户的 Path 变量中，这样我们在任何路径下的命令行中，都可以调用该程序工作。大部分应用程序安装过程中的做法也是如此。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;但是这样会将目录中的所有文件暴露到 Path 中，其中大部分是我们不需要用到的。这样做也增加了潜在 &lt;a href=&quot;https://zh.wikipedia.org/zh-cn/DLL%E5%9C%B0%E7%8D%84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DLL Hell&lt;/a&gt; 隐患，比如同名不同版本 DLL 暴露到 Path 中低版本覆盖了高版本导致程序运行时异常。&lt;/p&gt;
&lt;p&gt;最好的做法是，只将我们需要用到的 exe 文件加入到 Path 中，Windows 上也的确有这样的解决方法。&lt;/p&gt;
&lt;p&gt;以 vim 为例。我们新建一个 &lt;code&gt;vim.bat&lt;/code&gt; 文件，编辑文件加入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&quot;C:\Program Files (x86)\Vim\vim74\gvim.exe&quot; %*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将该文件保存到一个目录中，然后再&lt;strong&gt;将该目录加入到用户或系统 Path 变量中&lt;/strong&gt;。这样，这个 &lt;code&gt;vim.bat&lt;/code&gt; 就暴露到 Path 中，可以在命令行中随时调用了，调用名为 &lt;code&gt;vim&lt;/code&gt;，即 &lt;code&gt;.bat&lt;/code&gt; 文件的文件名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@&lt;/code&gt; 表示禁止调用的回显，&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; 引号包含目标程序的完整路径（这样路径中允许有空白符），&lt;code&gt;%*&lt;/code&gt; 表示将传递给 &lt;code&gt;.bat&lt;/code&gt; 文件的参数原封不动的传递给目标程序。&lt;/p&gt;
&lt;p&gt;我们可以在此目录下新建其他 &lt;code&gt;bat&lt;/code&gt; 文件，来向 Path 中加入各种所需的程序（同时也可以自定义名称）。&lt;/p&gt;
&lt;p&gt;PS: 其实如果打开 Ruby 的安装目录，我们就会发现，irb 和 gem 都使用了这种方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;将一个程序加入到环境 Path 中，通常做法是将程序文件所在目录附加到系统或者用户的 Path 变量中，这样我们在任何路径下的命令行中，都可以调用该程序工作。大部分应用程序安装过程中的做法也是如此。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NDK 实例</title>
    <link href="https://tisyang.github.io/2016/04/ndk-sample/"/>
    <id>https://tisyang.github.io/2016/04/ndk-sample/</id>
    <published>2016-04-11T16:00:00.000Z</published>
    <updated>2016-04-12T15:05:33.021Z</updated>
    
    <content type="html">&lt;p&gt;本文通过编写一个算法类二进制库以及示例App应用来介绍NDK开发，重点是二进制库编写、编译以及自定义参数的传递。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1-Java层接口定义&quot;&gt;&lt;a href=&quot;#1-Java层接口定义&quot; class=&quot;headerlink&quot; title=&quot;1. Java层接口定义&quot;&gt;&lt;/a&gt;1. Java层接口定义&lt;/h2&gt;&lt;p&gt;在做so库之前，需要首先设计约定库的接口，包括实现哪些功能，具体函数以及接口参数等等，这也是Java层调用所使用的接口。&lt;/p&gt;
&lt;p&gt;在这个例子中，我们准备实现一个算法库，其中实现2个函数，一个返回算法库版本号，另一个计算线段中点坐标，主要用来展示so库编写以及参数传递过程。如果有需要其他的接口实现，可以参照这两个函数来做。&lt;/p&gt;
&lt;p&gt;要实现的接口文件 &lt;code&gt;com/zhdgps/ts/TSMath.java&lt;/code&gt;，其中 &lt;code&gt;tsmath&lt;/code&gt; 是要实现的so库名字。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.zhdgps.ts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TSMath&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.loadLibrary(&lt;span class=&quot;string&quot;&gt;&quot;tsmath&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 获取版本信息 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getVersion&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 计算两点连线中心点 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; TSCoord &lt;span class=&quot;title&quot;&gt;calcCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TSCoord a, TSCoord b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;System.loadLibrary&lt;/code&gt; 用来加载so库，&lt;code&gt;static&lt;/code&gt; 表示这段代码要最先运行。&lt;/p&gt;
&lt;p&gt;接口函数用 &lt;code&gt;native&lt;/code&gt; 关键字修饰表明这是源生方法实现而不是 java 代码实现（JNI），在这里就是指在so库中实现的方法。&lt;/p&gt;
&lt;p&gt;同时辅助用的 &lt;code&gt;TSCoord&lt;/code&gt; 定义文件 &lt;code&gt;com/zhdgps/ts/TSCoord.java&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.zhdgps.ts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TSCoord&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; E;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; Z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两个文件都放属于包 &lt;code&gt;com.zhdgps.ts&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;2-so库C代码实现和编译&quot;&gt;&lt;a href=&quot;#2-so库C代码实现和编译&quot; class=&quot;headerlink&quot; title=&quot;2. so库C代码实现和编译&quot;&gt;&lt;/a&gt;2. so库C代码实现和编译&lt;/h2&gt;&lt;p&gt;完成库接口设计后，下面介绍如何用C来实现接口对应的功能。&lt;/p&gt;
&lt;p&gt;新建文件夹 &lt;code&gt;tsmath&lt;/code&gt;，用于存放 so 库工程。在 &lt;code&gt;tsmath&lt;/code&gt; 下新建子文件夹 &lt;code&gt;jni&lt;/code&gt; （命名为&lt;code&gt;jni&lt;/code&gt; 是 NDK 编译的需要）用于存放 so 库的源文件。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;jni&lt;/code&gt; 文件夹下新建文件 &lt;code&gt;tsmath.h&lt;/code&gt;、&lt;code&gt;tsmath.c&lt;/code&gt;、&lt;code&gt;algorithm.h&lt;/code&gt;、&lt;code&gt;algorithm.c&lt;/code&gt;、&lt;code&gt;Android.mk&lt;/code&gt; 以及 &lt;code&gt;Application.mk&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;tsmath.h&lt;/code&gt; 和 &lt;code&gt;tsmath.c&lt;/code&gt; 是 so 库的实现文件，&lt;code&gt;algorithm.h&lt;/code&gt; 和 &lt;code&gt;algorithm.c&lt;/code&gt; 是实际算法实现，相对来说 &lt;code&gt;tsmath.c&lt;/code&gt; 是 JNI 接口层，而 &lt;code&gt;algorithm.c&lt;/code&gt; 则是实际的算法C代码。这样区分有助于代码逻辑分层，当然都写在 &lt;code&gt;tsmath.c&lt;/code&gt; 中也是可行的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Android.mk&lt;/code&gt; 和 &lt;code&gt;Application.mk&lt;/code&gt; 是用于编译so库所需要的 &lt;code&gt;ndk-build&lt;/code&gt; 脚本文件，后面会进行详细叙述。&lt;/p&gt;
&lt;h3 id=&quot;2-1-算法实现（Algorithm）&quot;&gt;&lt;a href=&quot;#2-1-算法实现（Algorithm）&quot; class=&quot;headerlink&quot; title=&quot;2.1 算法实现（Algorithm）&quot;&gt;&lt;/a&gt;2.1 算法实现（&lt;code&gt;Algorithm&lt;/code&gt;）&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Algorithm.h&lt;/code&gt; 文件内容：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; TS_ALGORITHM_H&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TS_ALGORITHM_H&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _TSCoord &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; E;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; Z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;TSCoord;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; TSAlgo_ErrorCode &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TSALGO_NOERROR,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TSAlgo_CalcCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TSCoord *a, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TSCoord *b, TSCoord *result)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;头文件主要声明了一个计算中点的函数以及参数结构体类型，实现文件 &lt;code&gt;Algorithm.c&lt;/code&gt; 内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;algorithm.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TSAlgo_CalcCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TSCoord *a, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TSCoord *b, TSCoord *result)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result-&amp;gt;N = (a-&amp;gt;N + b-&amp;gt;N) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result-&amp;gt;E = (a-&amp;gt;E + b-&amp;gt;E) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result-&amp;gt;Z = (a-&amp;gt;Z + b-&amp;gt;Z) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return TSALGO_NOERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果有其他要实现的算法，都可以在这个模块内实现。此模块将被 JNI 接口层调用。&lt;/p&gt;
&lt;h3 id=&quot;2-2-JNI-接口实现&quot;&gt;&lt;a href=&quot;#2-2-JNI-接口实现&quot; class=&quot;headerlink&quot; title=&quot;2.2 JNI 接口实现&quot;&gt;&lt;/a&gt;2.2 JNI 接口实现&lt;/h3&gt;&lt;p&gt;JNI 接口部分是 so 库的核心，用于在 Java 调用和实际的 C/C++ 调用之间充当中间层。JNI 的实现有两种方法，一种是静态注册，一种是动态注册。&lt;/p&gt;
&lt;p&gt;静态注册是指用 &lt;code&gt;javah&lt;/code&gt; 工具来生成 C/C++ 头文件，获得正确的函数名。在运行时 JNI 按照指定规则的函数命名来调用对应的 C 函数。&lt;/p&gt;
&lt;p&gt;动态注册是指在动态库模块被加载的时候，模块注册的函数功能到 JVM 中。在对应函数被调用时，JVM会按照指定的注册函数名去调用实际的函数。&lt;/p&gt;
&lt;p&gt;静态注册生成的函数命名很长，而且如果要修改函数名，那么就要重新修改编译。静态注册的模块只有在被调用时才会被查找检查，如果函数命名有问题，会直接运行异常。&lt;/p&gt;
&lt;p&gt;动态注册在向 JVM 注册函数时，可以指定函数名，在编写时可以使用自定义的函数命名，如果需要修改维护，则只需要修改注册时的命名即可。&lt;/p&gt;
&lt;p&gt;NDK 推荐使用动态注册，在模块中定义 &lt;code&gt;JNI_OnLoad&lt;/code&gt; 函数,此函数在模块被加载时（即&lt;code&gt;System.loadLibrary&lt;/code&gt;）被调用，模块在此函数中注册所有函数。&lt;/p&gt;
&lt;p&gt;综上，我们要在模块中实现3个主要函数：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 动态库加载时候被调用的方法，进行初始化并注册模块函数 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jint JNICALL &lt;span class=&quot;title&quot;&gt;JNI_OnLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JavaVM *vm, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *reserved)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 对应 TSMath.getVersion */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;native_get_version&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 对应 TSMath.calcCenter */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jobject JNICALL &lt;span class=&quot;title&quot;&gt;native_calc_center&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jobject coorda, jobject coordb)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;native_get_version&lt;/code&gt; 和 &lt;code&gt;native_calc_center&lt;/code&gt; 即 &lt;code&gt;TSMath&lt;/code&gt; 的 JNI 实现，函数参数和返回值也与之对应，每个函数的前两个参数 &lt;code&gt;JNIEnv *&lt;/code&gt; 和 &lt;code&gt;jobject&lt;/code&gt; 是 JNI 函数固定传入的参数。&lt;code&gt;jstring&lt;/code&gt; 对应 Java 的 &lt;code&gt;String&lt;/code&gt;，而自定义类对象均用 &lt;code&gt;jobject&lt;/code&gt; 来对应，完整的 JNI 类型匹配可以参见 &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html#wp428&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Primitive Types&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;要实现动态注册，我们需要编写注册方法：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* ------------------------------------------------------------- */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 方法注册资源表 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; JNINativeMethod native_methods[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;getVersion&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()Ljava/lang/String;&quot;&lt;/span&gt;, (void *)native_get_version&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;calcCenter&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;(Lcom/zhdgps/ts/TSCoord;Lcom/zhdgps/ts/TSCoord;)Lcom/zhdgps/ts/TSCoord;&quot;&lt;/span&gt;, (void *)native_calc_center&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; NATIVE_METHODS_COUNT (sizeof(native_methods)/sizeof(native_methods[0]))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 为某一个类注册方法 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;register_navtive_methods&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *classname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    JNINativeMethod *methods,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; methods_num)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clazz = (*env)-&amp;gt;FindClass(env, classname);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(clazz == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return JNI_FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((*env)-&amp;gt;RegisterNatives(env, clazz, methods, methods_num) &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return JNI_FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return JNI_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 为所有类注册本地方法 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;register_natives&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 指定要注册的类名 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *classname = &lt;span class=&quot;string&quot;&gt;&quot;com/zhdgps/ts/TSMath&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return register_navtive_methods(env, classname, native_methods, NATIVE_METHODS_COUNT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;JNINativeMethod&lt;/code&gt; 是在 &lt;code&gt;&amp;lt;jni.h&amp;gt;&lt;/code&gt; 中定义的结构体，用于存储要动态注册的函数信息。第一个成员是字符串，用以表示要注册的函数所使用的函数名。第二个成员是字符串，用以表示函数的参数和返回值接口(&lt;code&gt;Type Signatures&lt;/code&gt;)，在这个字符串中，&lt;code&gt;&amp;quot;()&amp;quot;&lt;/code&gt;内表示函数的参数类型，然后是函数的返回值类型，&lt;code&gt;&amp;quot;()&amp;quot;&lt;/code&gt; 表示函数参数为空，而如果函数返回值为空，则用 &lt;code&gt;&amp;quot;()V&amp;quot;&lt;/code&gt; 表示。 &lt;code&gt;&amp;quot;Ljava/lang/String;&amp;quot;&lt;/code&gt; 表示为 &lt;code&gt;java.lang.String&lt;/code&gt;，&lt;code&gt;&amp;quot;Lxxx;&amp;quot;&lt;/code&gt; 是 &lt;code&gt;xxx&lt;/code&gt; 类型的完整写法，包字段分隔用斜杠代替，比如 &lt;code&gt;&amp;quot;Lcom/zhdgps/ts/TScoord;&amp;quot;&lt;/code&gt; 表示类型为 &lt;code&gt;com.zhdgps.ts.TSCoord&lt;/code&gt; 。如果参数有多个，依次写出对应类型。Java 源生类型可以参考 &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html#wp16432&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Type Signatures&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;register_natives&lt;/code&gt; 中，我们将这两个函数注册到了类 &lt;code&gt;com/zhgps/ts/TSmath&lt;/code&gt; 中，这个类就是之前在 Java 层定义的 &lt;code&gt;com.zhdgps.ts.TSMath&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面继续 &lt;code&gt;native_get_version&lt;/code&gt; 和 &lt;code&gt;native_calc_center&lt;/code&gt; 两个函数的实现&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TSMATH_VERSION  &lt;span class=&quot;string&quot;&gt;&quot;v0.1 alpha&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;native_get_version&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (*env)-&amp;gt;NewStringUTF(env, TSMATH_VERSION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;native_get_version&lt;/code&gt; 比较简单，就返回一个版本文本字符串。这里需要注意的是，如果函数需要返回非ASCII的字符串，则不能直接使用 &lt;code&gt;NewStringUTF&lt;/code&gt;，因为 JNI 使用了修改版的 UTF-8 编码，具体可以参考 &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html#wp16542&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Modified UTF-8 Strings&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 保存全局 TSCoord 的信息，便于后续检索成员 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; TSCoordJNIInfo &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* ICS 4.0 之后，jclass 可能会变化，所以在获取后，调用 NewGlobalRef 保存引用，然后就不再变化 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* ID 一般不会变化 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jmethodID mid_init;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; g_tscoord_jni;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;helper_init_tscoord_jniinfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass cls = (*env)-&amp;gt;FindClass(env, &lt;span class=&quot;string&quot;&gt;&quot;com/zhdgps/ts/TSCoord&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_n = (*env)-&amp;gt;GetFieldID(env, cls, &lt;span class=&quot;string&quot;&gt;&quot;N&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_e = (*env)-&amp;gt;GetFieldID(env, cls, &lt;span class=&quot;string&quot;&gt;&quot;E&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jfieldID fid_z = (*env)-&amp;gt;GetFieldID(env, cls, &lt;span class=&quot;string&quot;&gt;&quot;Z&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jmethodID mid_init = (*env)-&amp;gt;GetMethodID(env, cls, &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* ICS 4.0 之后保存全局引用需要调用此函数，后续需要解除引用，使用函数 DeleteGlobalRef */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cls = (jclass)((*env)-&amp;gt;NewGlobalRef(env, cls));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g_tscoord_jni.cls = cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g_tscoord_jni.fid_n = fid_n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g_tscoord_jni.fid_e = fid_e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g_tscoord_jni.fid_z = fid_z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g_tscoord_jni.mid_init = mid_init;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; jobject &lt;span class=&quot;title&quot;&gt;helper_new_tscoord&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jobject tscoord = (*env)-&amp;gt;NewObject(env, g_tscoord_jni.cls, g_tscoord_jni.mid_init);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return tscoord;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TSCoord &lt;span class=&quot;title&quot;&gt;helper_get_tscoord&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject coord)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TSCoord res_coord;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jdouble n = (*env)-&amp;gt;GetDoubleField(env, coord, g_tscoord_jni.fid_n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jdouble e = (*env)-&amp;gt;GetDoubleField(env, coord, g_tscoord_jni.fid_e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jdouble z = (*env)-&amp;gt;GetDoubleField(env, coord, g_tscoord_jni.fid_z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res_coord.N = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res_coord.E = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res_coord.Z = z;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return res_coord;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;helper_set_tscoord&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject coord, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TSCoord *source)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;SetDoubleField(env, coord, g_tscoord_jni.fid_n, source-&amp;gt;N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;SetDoubleField(env, coord, g_tscoord_jni.fid_e, source-&amp;gt;E);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;SetDoubleField(env, coord, g_tscoord_jni.fid_z, source-&amp;gt;Z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jobject JNICALL &lt;span class=&quot;title&quot;&gt;native_calc_center&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jobject coorda, jobject coordb)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TSCoord a, b, c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jobject obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = helper_get_tscoord(env, coorda);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = helper_get_tscoord(env, coordb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TSAlgo_CalcCenter(&amp;amp;a, &amp;amp;b, &amp;amp;c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj = helper_new_tscoord(env);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    helper_set_tscoord(env, obj, &amp;amp;c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们定义了一个结构体 &lt;code&gt;struct TSCoordJNIInfo&lt;/code&gt; 用于保存 Java 类 &lt;code&gt;com.zhdgps.ts.TSCoord&lt;/code&gt; 保存在 JVM 中的信息，包括类句柄、各字段ID（N，E，Z）以及构造函数ID。这些信息到后面获取/设置类对象字段时会用到，用全局结构体保存这些信息是为了效率，对于 &lt;code&gt;FieldID&lt;/code&gt; 和 &lt;code&gt;MethodID&lt;/code&gt; 来说，一旦类初始化后就不再变化，如果每次需要获取类对象信息时都去调用 &lt;code&gt;GetFieldID&lt;/code&gt; 和 &lt;code&gt;GetMethodID&lt;/code&gt; ，会给 JVM 带来负担，而且代码也有冗余。这里需要注意的是类句柄，对于 ICS4.0 以后的安卓系统，内存中的句柄可能会因为内存整理而移动，这意味着类句柄是会变化的，需要使用函数 &lt;code&gt;NewGlobalRef&lt;/code&gt; 来保证句柄不变。&lt;/p&gt;
&lt;p&gt;函数 &lt;code&gt;helper_init_tscoord_jniinfo&lt;/code&gt; 用于获取类信息，这个函数需要在 &lt;code&gt;JNI_OnLoad&lt;/code&gt; 中调用，保证在函数被调用前初始化全局信息。&lt;/p&gt;
&lt;p&gt;函数 &lt;code&gt;helper_new_tscoord&lt;/code&gt;、 &lt;code&gt;helper_get_tscoord&lt;/code&gt; 和 &lt;code&gt;helper_set_tscoord&lt;/code&gt; 是定义的三个辅助函数，用于新建 &lt;code&gt;TSCoord&lt;/code&gt; Java 对象、&lt;code&gt;TSCoord&lt;/code&gt; Java 对象与 C 结构体互相转换。&lt;/p&gt;
&lt;p&gt;如上，要获取一个类对象信息，依次需要使用 &lt;code&gt;FindClass&lt;/code&gt; 来获取类句柄，然后通过句柄来获取各个字段的 &lt;code&gt;FieldID&lt;/code&gt;，之后就可以通过这些字段 ID 来获取实际的值。&lt;code&gt;com.zhdgps.ts.TSCoord&lt;/code&gt; 字段均为 &lt;code&gt;double&lt;/code&gt; 所以使用 &lt;code&gt;GetDoubleField&lt;/code&gt; 来获取字段值，如果有其他类型，可以以此类推。&lt;/p&gt;
&lt;p&gt;函数 &lt;code&gt;native_calc_center&lt;/code&gt; 的逻辑就比较简单了，通过转换对象，然后转为调用 &lt;code&gt;Algorithm&lt;/code&gt; 中的算法，然后再将结果转换为 Java 对象返回。&lt;/p&gt;
&lt;h3 id=&quot;2-3-编译-so-库&quot;&gt;&lt;a href=&quot;#2-3-编译-so-库&quot; class=&quot;headerlink&quot; title=&quot;2.3 编译 so 库&quot;&gt;&lt;/a&gt;2.3 编译 so 库&lt;/h3&gt;&lt;p&gt;编辑 &lt;code&gt;Android.mk&lt;/code&gt; 文件&lt;/p&gt;
&lt;figure class=&quot;highlight makefile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PATH := &lt;span class=&quot;variable&quot;&gt;$(call my-dir)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(CLEAR_VARS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 架构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_ARM_MODE := arm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 模块名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_MODULE := tsmath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 模块编译源文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_SRC_FILES := tsmath.c algorithm.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 模块依赖的库，比如要使用 android log 库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_LDLIBS := -llog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译为动态库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(BUILD_SHARED_LIBRARY)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个文件是用于 so 模块的编译，其中模块名为 &lt;code&gt;tsmath&lt;/code&gt;，这样编译出的文件会自动加前后缀，输出为 &lt;code&gt;libtsmath.so&lt;/code&gt;。源文件部分加上项目使用的所有 C 文件，头文件不必加入其中。如果有依赖的安卓库，则加到 &lt;code&gt;LOCAL_LDLIBS&lt;/code&gt; 链接部分。&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;Application.mk&lt;/code&gt; 文件&lt;/p&gt;
&lt;figure class=&quot;highlight makefile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;APP_OPTIM := release&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里指定生成 release 版本的 so 库。如果这里如果需要生成其他平台库，则需要设置 &lt;code&gt;APP_ABI&lt;/code&gt; 字段。比如要生成全平台，则添加一句 &lt;code&gt;APP_ABI := all&lt;/code&gt;，这样会同时生成其他平台（x86 等）。&lt;/p&gt;
&lt;p&gt;下载 NDK ，完成安装并设置好系统 &lt;code&gt;Path&lt;/code&gt; 变量。下载地址 &lt;a href=&quot;http://developer.android.com/ndk/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android NDK&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;jni&lt;/code&gt; 上一级目录 &lt;code&gt;tsmath&lt;/code&gt; 下打开命令行，输入命令 &lt;code&gt;ndk-build&lt;/code&gt; 进行编译，编译完成后的 so 文件自动会保存到 &lt;code&gt;libs&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;h2 id=&quot;3-so-库的使用&quot;&gt;&lt;a href=&quot;#3-so-库的使用&quot; class=&quot;headerlink&quot; title=&quot;3. so 库的使用&quot;&gt;&lt;/a&gt;3. so 库的使用&lt;/h2&gt;&lt;p&gt;下面来新建一个 Android 项目来测试一下 so 库。&lt;/p&gt;
&lt;p&gt;使用 Android Studio 新建一个 Hello World 项目，这里可以设置项目命名空间为 &lt;code&gt;com.zhdgps.ts&lt;/code&gt; 来方便后面的测试。在项目文件夹的 &lt;code&gt;app/src/main&lt;/code&gt; 目录下，新建文件夹 &lt;code&gt;jniLibs&lt;/code&gt;，然后复制 &lt;code&gt;tsmath/libs&lt;/code&gt; 目录下的编译输出到该文件夹中，注意保留 so 库的目录结构，比如 arm 架构编译的为 &lt;code&gt;jniLibs/armeabi/libtsmath.so&lt;/code&gt;。将 &lt;code&gt;TSCoord.java&lt;/code&gt; 和 &lt;code&gt;TSMath.java&lt;/code&gt; 文件复制到 &lt;code&gt;app/src/main/java/com/zhdgps/ts&lt;/code&gt; 目录下。Android Studi 会自动将添加的文件加入到工程中。&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;MainActivity.java&lt;/code&gt; 文件， 在 &lt;code&gt;onCreate&lt;/code&gt; 中添加测试代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TSCoord a = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TSCoord();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.N = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.E = &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.Z = &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TSCoord b = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TSCoord();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.N = &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.E = &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.Z = &lt;span class=&quot;number&quot;&gt;9.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TSCoord c = TSMath.calcCenter(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String output = String.format(&lt;span class=&quot;string&quot;&gt;&quot;A(%f, %f, %f), B(%f, %f, %f) center: (%f, %f, %f)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				a.N, a.E, a.Z,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				b.N, b.E, b.Z,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				c.N, c.E, c.Z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TextView view = (TextView)findViewById(R.id.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;view.setText(output);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里测试了函数 &lt;code&gt;TSMath.calcCenter&lt;/code&gt;。编译项目并运行，就可以看到结果了。&lt;/p&gt;
&lt;p&gt;源码可以点击这里&lt;a href=&quot;/download/ndk_sample.zip&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文通过编写一个算法类二进制库以及示例App应用来介绍NDK开发，重点是二进制库编写、编译以及自定义参数的传递。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ndk-build提示“系统找不到指定的路径”问题</title>
    <link href="https://tisyang.github.io/2016/03/ndk-build-problem/"/>
    <id>https://tisyang.github.io/2016/03/ndk-build-problem/</id>
    <published>2016-03-27T16:00:00.000Z</published>
    <updated>2016-04-12T14:45:50.008Z</updated>
    
    <content type="html">&lt;p&gt;如果是win32系统，使用ndk-build时提示出错，但是在命令行工具中看不到错误信息，进一步使用 &lt;code&gt;ndk-build 2&amp;gt;1.txt&lt;/code&gt; 来重定向，发现错误信息是“系统找不到路径”，那么你可能和我遇到相同的问题了。&lt;/p&gt;
&lt;p&gt;这个并不是因为ndk-build不在 &lt;code&gt;path&lt;/code&gt; 路径中，而是NDK自己的问题。观察 &lt;code&gt;ndk-build&lt;/code&gt; 命令输出详细，调用 &lt;code&gt;gcc&lt;/code&gt; 的路径实际上并不对。&lt;/p&gt;
&lt;p&gt;在命令中使用的是 &lt;code&gt;&amp;lt;ndk_dir&amp;gt;/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86/&lt;/code&gt; 路径，但实际在x86版本的NDK目录中对比，其中只有 &lt;code&gt;&amp;lt;ndk_dir&amp;gt;/toolchains/arm-linux-androideabi-4.9/prebuilt/windows&lt;/code&gt; 目录，不是 &lt;code&gt;windows-x86&lt;/code&gt; ，将其重命名为 &lt;code&gt;windows-x86&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;这可能是r11b-x86版本NDK的一个bug。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果是win32系统，使用ndk-build时提示出错，但是在命令行工具中看不到错误信息，进一步使用 &lt;code&gt;ndk-build 2&amp;gt;1.txt&lt;/code&gt; 来重定向，发现错误信息是“系统找不到路径”，那么你可能和我遇到相同的问题了。&lt;/p&gt;
&lt;p&gt;这个并不是因
    
    </summary>
    
    
  </entry>
  
</feed>
